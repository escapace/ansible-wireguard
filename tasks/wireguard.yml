---
- name: Add WireGuard repository
  ansible.builtin.get_url:
    url: https://copr.fedorainfracloud.org/coprs/jdoss/wireguard/repo/epel-8/jdoss-wireguard-epel-8.repo
    dest: /etc/yum.repos.d/wireguard.repo
    owner: root
    group: root
    mode: "0644"
  register: wireguard_repository

# - name: enable wireguard copr
#   command:
#     cmd: yum copr enable -y jdoss/wireguard
#     creates: /etc/yum.repos.d/_copr:copr.fedorainfracloud.org:jdoss:wireguard.repo

- name: install wireguard
  ansible.builtin.package:
    name: "{{ packages }}"
    state: present
    update_cache: "{{ wireguard_repository.changed }}"
  vars:
    packages:
      - wireguard-tools
      - wireguard-dkms

- name: enable wireguard kernel module
  ansible.builtin.lineinfile:
    path: /etc/modules-load.d/wireguard.conf
    line: wireguard
    owner: root
    group: root
    mode: "0644"
    create: true

- name: enable systemd-modules-load.service
  ansible.builtin.service:
    name: systemd-modules-load
    state: restarted
    enabled: true
  changed_when: false

- name: register if config/private key already exists on target host
  ansible.builtin.stat:
    path: "{{ wireguard_directory }}/{{ wireguard_interface }}.conf"
  register: wireguard_config_file_stat
  tags:
    - wireguard

- when: not wireguard_config_file_stat.stat.exists
  tags:
    - wireguard

  block:
    - name: Generate WireGuard private key
      ansible.builtin.shell: wg genkey
      register: wireguard_private_key_result

    - name: set private key fact
      ansible.builtin.set_fact:
        wireguard_private_key: "{{ wireguard_private_key_result.stdout }}"
- when: wireguard_config_file_stat.stat.exists
  tags:
    - wireguard

  block:
    - name: read wireguard config file
      ansible.builtin.slurp:
        src: "{{ wireguard_directory }}/{{ wireguard_interface }}.conf"
      register: wireguard_config

    - name: set private key fact
      ansible.builtin.set_fact:
        wireguard_private_key: "{{ wireguard_config['content'] | b64decode | regex_findall('PrivateKey = (.*)') | first }}"

- name: derive wireguard public key
  ansible.builtin.shell: echo '{{ wireguard_private_key }}' | wg pubkey
  register: wireguard_public_key_result
  changed_when: false
  tags:
    - wireguard

- name: set public key fact
  ansible.builtin.set_fact:
    wireguard_public_key: "{{ wireguard_public_key_result.stdout }}"
  tags:
    - wireguard

- name: create wireguard configuration directory
  ansible.builtin.file:
    dest: "{{ wireguard_directory }}"
    state: directory
    mode: "0700"
  tags:
    - wireguard

- name: create the wireguard configuration file
  ansible.builtin.template:
    src: wg.conf.j2
    dest: "{{ wireguard_directory }}/{{ wireguard_interface }}.conf"
    owner: root
    group: root
    mode: "0600"
  notify:
    - wireguard reconfigure
  tags:
    - wireguard

- name: create the wireguard ferm configuration
  ansible.builtin.template:
    src: templates/ferm.conf.j2
    dest: /etc/ferm/ferm.d/1100-wireguard.conf
    owner: root
    group: root
    mode: "0600"
  notify:
    - ferm restart
  tags:
    - wireguard

- name: create the wireguard ferm variables
  ansible.builtin.template:
    src: templates/ferm-vars.conf.j2
    dest: /etc/ferm/vars.d/1100-wireguard.conf
    owner: root
    group: root
    mode: "0600"
  notify:
    - ferm restart
  tags:
    - wireguard

- name: check if reload-module-on-update is set
  ansible.builtin.stat:
    path: "{{ wireguard_directory }}/.reload-module-on-update"
  register: wireguard_reload_module_on_update
  tags:
    - wireguard

- name: set wireguard reload-module-on-update
  ansible.builtin.file:
    dest: "{{ wireguard_directory }}/.reload-module-on-update"
    state: touch
    mode: "0755"
  when: not wireguard_reload_module_on_update.stat.exists
  tags:
    - wireguard

- name: wireguard kresd configuration
  ansible.builtin.template:
    src: templates/915-view-wireguard.conf.j2
    dest: /etc/knot-resolver/kresd.conf.d/915-view-wireguard.conf
    owner: root
    group: knot-resolver
    mode: "0640"
  notify:
    - kresd restart
  tags:
    - wireguard

- name: enable wireguard service
  ansible.builtin.service:
    name: wg-quick@{{ wireguard_interface }}
    enabled: true

- ansible.builtin.include_tasks: peer.yml
  loop: "{{ wireguard_peers }}"
  when: wireguard_endpoints | length > 0
  tags:
    - wireguard
